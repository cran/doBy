\documentclass[11pt]{article}
\usepackage{inputenc,hyperref,a4wide,color,boxedminipage,Sweave,listings}

%\VignetteIndexEntry{HTMLreport}
%\VignettePackage{doBy}

\title{The \texttt{HTMLreport()} function in the \texttt{doBy} package}
\author{Søren Højsgaard}
\begin{document}
\maketitle
\tableofcontents

\SweaveOpts{keep.source=T}
\renewenvironment{Schunk}{\begin{center}
    \scriptsize
    \begin{boxedminipage}{0.95\textwidth}}{
    \end{boxedminipage}\end{center}}


\def\proglang#1{{#1}}
\def\pkg#1{{#1}}
\def\doby{\pkg{doBy}}
\def\code#1{\texttt{#1}}
\def\shd#1{\footnote{SHD: #1}}
\def\rep{\code{HTMLreport()}}
\def\R{\proglang{R}}


@ 
<<echo=FALSE>>=
oopt <- options()
options("digits"=4, "width"=80, "prompt"=" ", "continue"="  ")
library(doBy)
@ %def 

\parindent0pt\parskip5pt

\section{Introduction} 
\label{sec:introduction}

The \rep\ function in the \doby\ package provides facilities for
translating an \R--script (a file with \R\ commands and text comments) into an HTML
document. This HTML document contains the text and the \R--code along
with the results from executing the \R--code (i.e.\ tables, graphics
etc).  

% This document as a .pdf file) is available from
% \url{http://cran.r-project.org/web/packages/doBy/index.html}

A small example is shown in Figure~\ref{fig:src1}. This \R--script
contains \R\ code and text comments (in the lines starting with
\code{\#\#}). The result from processing
this \R--script file is an HTML document which is shown in
Figures~\ref{fig:res1}, \ref{fig:res2}  and \ref{fig:res3}. 

\rep\ is nowhere as flexible as using \code{Sweave()} with \LaTeX\ or
using \code{odfWeave()} with \code{OpenOffice}. The facilities of
\rep\ may be summarized as follows (details are provided in
Section~\ref{sec:markup}): 
\begin{itemize}
\item There are a few markup facilities for the text. These are inspired by
\code{txt2tags} markups (see \url{http://txt2tags.org/}).

\item The specification of
\R--code follows the \code{noweb} syntax also employed by Sweave (see
\url{http://www.stat.uni-muenchen.de/~leisch/Sweave/Sweave-manual.pdf}). 

\end{itemize}

\begin{figure}[ht]
  \centering
  \fbox{\includegraphics[viewport=0 500 550 800]{Example1-Puromycin.pdf}}
  \caption{An \R--script file with a few markups of text.}
  \label{fig:src1}
\end{figure}

\begin{figure}[ht]
  \centering
  \fbox{\includegraphics[viewport=0 200 550 830]{Example1-Puromycin-REPORT.pdf}}
  \caption{The resulting HTML document produced by \rep.}
  \label{fig:res1}
\end{figure}

\begin{figure}[ht]
  \centering
  \fbox{\includegraphics[viewport=0 50 550 830,page=2]{Example1-Puromycin-REPORT.pdf}}
  \caption{The resulting HTML document produced by \rep.}
  \label{fig:res2}
\end{figure}

\begin{figure}[ht]
  \centering
  \fbox{\includegraphics[viewport=0 700 550 830,page=3]{Example1-Puromycin-REPORT.pdf}}
  \caption{The resulting HTML document produced by \rep.}
  \label{fig:res3}
\end{figure}


\section{Usage}
\label{sec:xxx}

Suppose the text in Figure~\ref{fig:src1} is in the file
\verb'Example1-Puromycin.R'. Then the HTML file is created with
@ 
<<>>=
HTMLreport("Example1-Puromycin.R")
@ %def 

This creates the file \verb'Example1-Puromycin-REPORT.html' which (by
default) is located in the working directory of \R. 


\section{Text markup}
\label{sec:markup}

All text lines start with one or more hashes (\code{\#}). 

\begin{itemize}
\item Lines starting with one or two hashes are regarded as text which
  are transferred (possibly after some additional processing; see below) 
  to the resulting HTML document. 
\item Lines starting with three hashes are not transferred to the HTML
  document. This is useful e.g. for TODOs. 
\end{itemize}

\subsection{Text beautifiers}
\label{sec:xxx}

\begin{itemize}

\item{Beautifiers: 
    {\bf boldface}, 
    {\it italics},
    \underline{underline},
    \code{monospace}
    :}

  These are produced with: 
  \verb'**'boldface\verb'**',  \verb'//'italics\verb'//'
  \verb'__'underline\verb'__', \verb'&&'monospace\verb'&&'

\item The beautifiers can be combined in any way, e.g. \verb'**__'some
  text\verb'__**'. 
\end{itemize}

\subsection{Headings}
\label{sec:xxx}
\begin{itemize}
\item Headings at different font
  sizes are produced with:
  
  \verb'= Title level 1 =', \verb'== Title level 2 ==', 
  \verb'=== Title level 3 ==='
\item The text beautifiers can be used in the headings. 
  
\end{itemize}

\subsection{Miscellaneous}
\label{sec:xxx}

\begin{itemize}
\item The time of creation of the HTML document is produced by
\verb'%%date'. 


\item All text markups must appear on one line; that one may write
\begin{verbatim}
## = HERE COMES A TITLE =
\end{verbatim}
whereas is it is not allowed to
write  
\begin{verbatim}
## =
##   HERE COMES A TITLE
## =
\end{verbatim}

\end{itemize}

\subsection{\R\ code}
\label{sec:xxx}
\begin{itemize}
\item A chunk of \R--code lines start with \verb'##<<>>=' and ends with
\verb'##@'. 


\item Various options to code chunks can be specified between \verb'<<' and
\verb'>>='; see the example. 
\end{itemize}

\section{Implementation of \code{HTMLreport()}}
\label{sec:xxx}

A major design goal of \rep\ has been that no additional software must be
installed. \rep\ is based processing the source file line--by--line
(using \verb'gsub()') and therefore all text markups must not be split
over several lines. 

The workhorse of \rep\ is the \code{Sweave()} function using the
\code{RweaveHTML} driver of the \code{R2HTML} package. 




\end{document}


